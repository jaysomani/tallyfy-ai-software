name: Test and Build Tallyfy.ai

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  packages: write
  
env:
  AWS_DB_URL: ${{ secrets.AWS_DB_URL || 'postgresql://dummy:dummy@localhost:5432/dummy' }}
  TALLY_URL: ${{ secrets.TALLY_URL || 'http://localhost:9000' }}
  COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID || 'us-east-1_dummy' }}
  COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID || 'dummyclientid' }}
  COGNITO_REGION: ${{ secrets.COGNITO_REGION || 'us-east-1' }}
  TESTING: "true"
  GITHUB_ACTIONS: "true"

jobs:
  test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-github-actions-annotate-failures
        
    - name: Run tests
      run: |
        python -m pytest -v tests/test_cognito_auth.py tests/test_db_connector.py tests/test_tally_api.py tests/test_ledger_widget.py tests/test_login_widget.py
      env:
        AWS_DB_URL: ${{ secrets.AWS_DB_URL || 'postgresql://dummy:dummy@localhost:5432/dummy' }}
        TALLY_URL: ${{ secrets.TALLY_URL || 'http://localhost:9000' }}
        COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID || 'us-east-1_dummy' }}
        COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID || 'dummyclientid' }}
        COGNITO_REGION: ${{ secrets.COGNITO_REGION || 'us-east-1' }}
        
    - name: Run coverage
      run: |
        python -m pytest --cov=backend tests/test_cognito_auth.py tests/test_db_connector.py tests/test_tally_api.py tests/test_ledger_widget.py tests/test_login_widget.py --cov-report=xml
      env:
        AWS_DB_URL: ${{ secrets.AWS_DB_URL || 'postgresql://dummy:dummy@localhost:5432/dummy' }}
        TALLY_URL: ${{ secrets.TALLY_URL || 'http://localhost:9000' }}
        COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID || 'us-east-1_dummy' }}
        COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID || 'dummyclientid' }}
        COGNITO_REGION: ${{ secrets.COGNITO_REGION || 'us-east-1' }}
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install PyInstaller and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        pyinstaller --name tallyfy_ai --onefile --windowed main.py
      env:
        AWS_DB_URL: ${{ secrets.AWS_DB_URL || 'postgresql://dummy:dummy@localhost:5432/dummy' }}
        TALLY_URL: ${{ secrets.TALLY_URL || 'http://localhost:9000' }}
        COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID || 'us-east-1_dummy' }}
        COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID || 'dummyclientid' }}
        COGNITO_REGION: ${{ secrets.COGNITO_REGION || 'us-east-1' }}
        
    - name: Create zip archive
      run: |
        powershell Compress-Archive -Path dist/tallyfy_ai.exe -DestinationPath tallyfy_ai.zip
        
    - name: Upload exe artifact
      uses: actions/upload-artifact@v4
      with:
        name: tallyfy-ai-exe
        path: dist/tallyfy_ai.exe
        
    - name: Upload zip artifact
      uses: actions/upload-artifact@v4
      with:
        name: tallyfy-ai-zip
        path: tallyfy_ai.zip
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v0.1.${{ github.run_number }}
        name: Build ${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          dist/tallyfy_ai.exe
          tallyfy_ai.zip 